2023/06/18 14:16:45 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.8.16 (default, Mar  2 2023, 03:21:46) [GCC 11.2.0]
    CUDA available: True
    numpy_random_seed: 0
    GPU 0,1: NVIDIA TITAN RTX
    CUDA_HOME: :/usr/local/cuda-10.0
    GCC: gcc (Ubuntu 5.4.0-6ubuntu1~16.04.12) 5.4.0 20160609
    PyTorch: 1.10.1
    PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.2
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

    TorchVision: 0.11.2
    OpenCV: 4.7.0
    MMEngine: 0.7.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 0
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

2023/06/18 14:16:46 - mmengine - INFO - Config:
norm_cfg = dict(type='BN', requires_grad=True)
data_preprocessor = dict(
    type='SegDataPreProcessor',
    mean=[123.675, 116.28, 103.53],
    std=[58.395, 57.12, 57.375],
    bgr_to_rgb=True,
    pad_val=0,
    seg_pad_val=255,
    size=(64, 64))
model = dict(
    type='EncoderDecoder',
    data_preprocessor=dict(
        type='SegDataPreProcessor',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        bgr_to_rgb=True,
        pad_val=0,
        seg_pad_val=255,
        size=(256, 256)),
    pretrained=
    '/home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth',
    backbone=dict(
        type='ResNetV1c',
        depth=50,
        num_stages=4,
        out_indices=(0, 1, 2, 3),
        dilations=(1, 1, 2, 4),
        strides=(1, 2, 1, 1),
        norm_cfg=dict(type='BN', requires_grad=True),
        norm_eval=False,
        style='pytorch',
        contract_dilation=True),
    decode_head=dict(
        type='PSPHead',
        in_channels=2048,
        in_index=3,
        channels=512,
        pool_scales=(1, 2, 3, 6),
        dropout_ratio=0.1,
        num_classes=5,
        norm_cfg=dict(type='BN', requires_grad=True),
        align_corners=False,
        loss_decode=dict(
            type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0)),
    auxiliary_head=dict(
        type='FCNHead',
        in_channels=1024,
        in_index=2,
        channels=256,
        num_convs=1,
        concat_input=False,
        dropout_ratio=0.1,
        num_classes=5,
        norm_cfg=dict(type='BN', requires_grad=True),
        align_corners=False,
        loss_decode=dict(
            type='CrossEntropyLoss', use_sigmoid=False, loss_weight=0.4)),
    train_cfg=dict(),
    test_cfg=dict(mode='whole'))
dataset_type = 'watermelon'
data_root = '/home/lkk/Watermelon87_Semantic_Seg_Mask/'
crop_size = (256, 256)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations'),
    dict(
        type='RandomResize',
        scale=(2048, 1024),
        ratio_range=(0.5, 2.0),
        keep_ratio=True),
    dict(type='RandomCrop', crop_size=(64, 64), cat_max_ratio=0.75),
    dict(type='RandomFlip', prob=0.5),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs')
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='Resize', scale=(2048, 1024), keep_ratio=True),
    dict(type='LoadAnnotations'),
    dict(type='PackSegInputs')
]
img_ratios = [0.5, 0.75, 1.0, 1.25, 1.5, 1.75]
tta_pipeline = [
    dict(type='LoadImageFromFile', file_client_args=dict(backend='disk')),
    dict(
        type='TestTimeAug',
        transforms=[[{
            'type': 'Resize',
            'scale_factor': 0.5,
            'keep_ratio': True
        }, {
            'type': 'Resize',
            'scale_factor': 0.75,
            'keep_ratio': True
        }, {
            'type': 'Resize',
            'scale_factor': 1.0,
            'keep_ratio': True
        }, {
            'type': 'Resize',
            'scale_factor': 1.25,
            'keep_ratio': True
        }, {
            'type': 'Resize',
            'scale_factor': 1.5,
            'keep_ratio': True
        }, {
            'type': 'Resize',
            'scale_factor': 1.75,
            'keep_ratio': True
        }],
                    [{
                        'type': 'RandomFlip',
                        'prob': 0.0,
                        'direction': 'horizontal'
                    }, {
                        'type': 'RandomFlip',
                        'prob': 1.0,
                        'direction': 'horizontal'
                    }], [{
                        'type': 'LoadAnnotations'
                    }], [{
                        'type': 'PackSegInputs'
                    }]])
]
train_dataloader = dict(
    batch_size=8,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(type='InfiniteSampler', shuffle=True),
    dataset=dict(
        type='watermelon',
        data_root='/home/lkk/Watermelon87_Semantic_Seg_Mask/',
        data_prefix=dict(
            img_path='img_dir/train', seg_map_path='ann_dir/train'),
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='LoadAnnotations'),
            dict(
                type='RandomResize',
                scale=(2048, 1024),
                ratio_range=(0.5, 2.0),
                keep_ratio=True),
            dict(type='RandomCrop', crop_size=(64, 64), cat_max_ratio=0.75),
            dict(type='RandomFlip', prob=0.5),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs')
        ]))
val_dataloader = dict(
    batch_size=1,
    num_workers=4,
    persistent_workers=True,
    sampler=dict(type='DefaultSampler', shuffle=False),
    dataset=dict(
        type='watermelon',
        data_root='/home/lkk/Watermelon87_Semantic_Seg_Mask/',
        data_prefix=dict(img_path='img_dir/val', seg_map_path='ann_dir/val'),
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='Resize', scale=(2048, 1024), keep_ratio=True),
            dict(type='LoadAnnotations'),
            dict(type='PackSegInputs')
        ]))
test_dataloader = dict(
    batch_size=1,
    num_workers=4,
    persistent_workers=True,
    sampler=dict(type='DefaultSampler', shuffle=False),
    dataset=dict(
        type='watermelon',
        data_root='/home/lkk/Watermelon87_Semantic_Seg_Mask/',
        data_prefix=dict(img_path='img_dir/val', seg_map_path='ann_dir/val'),
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='Resize', scale=(2048, 1024), keep_ratio=True),
            dict(type='LoadAnnotations'),
            dict(type='PackSegInputs')
        ]))
val_evaluator = dict(type='IoUMetric', iou_metrics=['mIoU'])
test_evaluator = dict(type='IoUMetric', iou_metrics=['mIoU'])
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0),
    dist_cfg=dict(backend='nccl'))
vis_backends = [dict(type='LocalVisBackend')]
visualizer = dict(
    type='SegLocalVisualizer',
    vis_backends=[dict(type='LocalVisBackend')],
    name='visualizer')
log_processor = dict(by_epoch=False)
log_level = 'INFO'
load_from = None
resume = False
tta_model = dict(type='SegTTAModel')
optimizer = dict(type='SGD', lr=0.01, momentum=0.9, weight_decay=0.0005)
optim_wrapper = dict(
    type='OptimWrapper',
    optimizer=dict(type='SGD', lr=0.01, momentum=0.9, weight_decay=0.0005),
    clip_grad=None)
param_scheduler = [
    dict(
        type='PolyLR',
        eta_min=0.0001,
        power=0.9,
        begin=0,
        end=40000,
        by_epoch=False)
]
train_cfg = dict(type='IterBasedTrainLoop', max_iters=3000, val_interval=400)
val_cfg = dict(type='ValLoop')
test_cfg = dict(type='TestLoop')
default_hooks = dict(
    timer=dict(type='IterTimerHook'),
    logger=dict(type='LoggerHook', interval=100, log_metric_by_epoch=False),
    param_scheduler=dict(type='ParamSchedulerHook'),
    checkpoint=dict(type='CheckpointHook', by_epoch=False, interval=1500),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    visualization=dict(type='SegVisualizationHook'))
work_dir = './work_dirs/watermelon'
randomness = dict(seed=0)

2023/06/18 14:16:48 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
2023/06/18 14:16:48 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train:
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
2023/06/18 14:16:49 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
2023/06/18 14:16:49 - mmengine - INFO - load model from: /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth
2023/06/18 14:16:49 - mmengine - INFO - Loads checkpoint by local backend from path: /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth
2023/06/18 14:16:49 - mmengine - WARNING - The model and loaded state dict do not match exactly

unexpected key in source state_dict: fc.weight, fc.bias

Name of parameter - Initialization information

backbone.stem.0.weight - torch.Size([32, 3, 3, 3]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.stem.1.weight - torch.Size([32]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.stem.1.bias - torch.Size([32]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.stem.3.weight - torch.Size([32, 32, 3, 3]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.stem.4.weight - torch.Size([32]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.stem.4.bias - torch.Size([32]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.stem.6.weight - torch.Size([64, 32, 3, 3]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.stem.7.weight - torch.Size([64]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.stem.7.bias - torch.Size([64]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer1.0.conv1.weight - torch.Size([64, 64, 1, 1]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer1.0.bn1.weight - torch.Size([64]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer1.0.bn1.bias - torch.Size([64]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer1.0.conv2.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer1.0.bn2.weight - torch.Size([64]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer1.0.bn2.bias - torch.Size([64]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer1.0.conv3.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer1.0.bn3.weight - torch.Size([256]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer1.0.bn3.bias - torch.Size([256]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer1.0.downsample.0.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer1.0.downsample.1.weight - torch.Size([256]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer1.0.downsample.1.bias - torch.Size([256]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer1.1.conv1.weight - torch.Size([64, 256, 1, 1]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer1.1.bn1.weight - torch.Size([64]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer1.1.bn1.bias - torch.Size([64]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer1.1.conv2.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer1.1.bn2.weight - torch.Size([64]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer1.1.bn2.bias - torch.Size([64]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer1.1.conv3.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer1.1.bn3.weight - torch.Size([256]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer1.1.bn3.bias - torch.Size([256]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer1.2.conv1.weight - torch.Size([64, 256, 1, 1]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer1.2.bn1.weight - torch.Size([64]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer1.2.bn1.bias - torch.Size([64]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer1.2.conv2.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer1.2.bn2.weight - torch.Size([64]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer1.2.bn2.bias - torch.Size([64]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer1.2.conv3.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer1.2.bn3.weight - torch.Size([256]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer1.2.bn3.bias - torch.Size([256]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer2.0.conv1.weight - torch.Size([128, 256, 1, 1]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer2.0.bn1.weight - torch.Size([128]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer2.0.bn1.bias - torch.Size([128]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer2.0.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer2.0.bn2.weight - torch.Size([128]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer2.0.bn2.bias - torch.Size([128]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer2.0.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer2.0.bn3.weight - torch.Size([512]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer2.0.bn3.bias - torch.Size([512]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer2.0.downsample.0.weight - torch.Size([512, 256, 1, 1]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer2.0.downsample.1.weight - torch.Size([512]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer2.0.downsample.1.bias - torch.Size([512]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer2.1.conv1.weight - torch.Size([128, 512, 1, 1]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer2.1.bn1.weight - torch.Size([128]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer2.1.bn1.bias - torch.Size([128]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer2.1.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer2.1.bn2.weight - torch.Size([128]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer2.1.bn2.bias - torch.Size([128]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer2.1.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer2.1.bn3.weight - torch.Size([512]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer2.1.bn3.bias - torch.Size([512]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer2.2.conv1.weight - torch.Size([128, 512, 1, 1]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer2.2.bn1.weight - torch.Size([128]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer2.2.bn1.bias - torch.Size([128]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer2.2.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer2.2.bn2.weight - torch.Size([128]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer2.2.bn2.bias - torch.Size([128]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer2.2.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer2.2.bn3.weight - torch.Size([512]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer2.2.bn3.bias - torch.Size([512]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer2.3.conv1.weight - torch.Size([128, 512, 1, 1]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer2.3.bn1.weight - torch.Size([128]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer2.3.bn1.bias - torch.Size([128]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer2.3.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer2.3.bn2.weight - torch.Size([128]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer2.3.bn2.bias - torch.Size([128]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer2.3.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer2.3.bn3.weight - torch.Size([512]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer2.3.bn3.bias - torch.Size([512]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer3.0.conv1.weight - torch.Size([256, 512, 1, 1]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer3.0.bn1.weight - torch.Size([256]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer3.0.bn1.bias - torch.Size([256]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer3.0.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer3.0.bn2.weight - torch.Size([256]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer3.0.bn2.bias - torch.Size([256]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer3.0.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer3.0.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer3.0.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer3.0.downsample.0.weight - torch.Size([1024, 512, 1, 1]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer3.0.downsample.1.weight - torch.Size([1024]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer3.0.downsample.1.bias - torch.Size([1024]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer3.1.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer3.1.bn1.weight - torch.Size([256]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer3.1.bn1.bias - torch.Size([256]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer3.1.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer3.1.bn2.weight - torch.Size([256]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer3.1.bn2.bias - torch.Size([256]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer3.1.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer3.1.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer3.1.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer3.2.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer3.2.bn1.weight - torch.Size([256]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer3.2.bn1.bias - torch.Size([256]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer3.2.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer3.2.bn2.weight - torch.Size([256]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer3.2.bn2.bias - torch.Size([256]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer3.2.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer3.2.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer3.2.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer3.3.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer3.3.bn1.weight - torch.Size([256]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer3.3.bn1.bias - torch.Size([256]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer3.3.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer3.3.bn2.weight - torch.Size([256]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer3.3.bn2.bias - torch.Size([256]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer3.3.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer3.3.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer3.3.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer3.4.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer3.4.bn1.weight - torch.Size([256]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer3.4.bn1.bias - torch.Size([256]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer3.4.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer3.4.bn2.weight - torch.Size([256]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer3.4.bn2.bias - torch.Size([256]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer3.4.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer3.4.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer3.4.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer3.5.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer3.5.bn1.weight - torch.Size([256]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer3.5.bn1.bias - torch.Size([256]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer3.5.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer3.5.bn2.weight - torch.Size([256]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer3.5.bn2.bias - torch.Size([256]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer3.5.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer3.5.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer3.5.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer4.0.conv1.weight - torch.Size([512, 1024, 1, 1]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer4.0.bn1.weight - torch.Size([512]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer4.0.bn1.bias - torch.Size([512]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer4.0.conv2.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer4.0.bn2.weight - torch.Size([512]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer4.0.bn2.bias - torch.Size([512]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer4.0.conv3.weight - torch.Size([2048, 512, 1, 1]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer4.0.bn3.weight - torch.Size([2048]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer4.0.bn3.bias - torch.Size([2048]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer4.0.downsample.0.weight - torch.Size([2048, 1024, 1, 1]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer4.0.downsample.1.weight - torch.Size([2048]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer4.0.downsample.1.bias - torch.Size([2048]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer4.1.conv1.weight - torch.Size([512, 2048, 1, 1]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer4.1.bn1.weight - torch.Size([512]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer4.1.bn1.bias - torch.Size([512]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer4.1.conv2.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer4.1.bn2.weight - torch.Size([512]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer4.1.bn2.bias - torch.Size([512]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer4.1.conv3.weight - torch.Size([2048, 512, 1, 1]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer4.1.bn3.weight - torch.Size([2048]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer4.1.bn3.bias - torch.Size([2048]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer4.2.conv1.weight - torch.Size([512, 2048, 1, 1]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer4.2.bn1.weight - torch.Size([512]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer4.2.bn1.bias - torch.Size([512]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer4.2.conv2.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer4.2.bn2.weight - torch.Size([512]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer4.2.bn2.bias - torch.Size([512]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer4.2.conv3.weight - torch.Size([2048, 512, 1, 1]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer4.2.bn3.weight - torch.Size([2048]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

backbone.layer4.2.bn3.bias - torch.Size([2048]): 
PretrainedInit: load from /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/resnet50_v1c-2cccc1ad.pth 

decode_head.conv_seg.weight - torch.Size([5, 512, 1, 1]): 
NormalInit: mean=0, std=0.01, bias=0 

decode_head.conv_seg.bias - torch.Size([5]): 
NormalInit: mean=0, std=0.01, bias=0 

decode_head.psp_modules.0.1.conv.weight - torch.Size([512, 2048, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.psp_modules.0.1.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.psp_modules.0.1.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.psp_modules.1.1.conv.weight - torch.Size([512, 2048, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.psp_modules.1.1.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.psp_modules.1.1.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.psp_modules.2.1.conv.weight - torch.Size([512, 2048, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.psp_modules.2.1.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.psp_modules.2.1.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.psp_modules.3.1.conv.weight - torch.Size([512, 2048, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.psp_modules.3.1.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.psp_modules.3.1.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.bottleneck.conv.weight - torch.Size([512, 4096, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

decode_head.bottleneck.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.bottleneck.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.conv_seg.weight - torch.Size([5, 256, 1, 1]): 
NormalInit: mean=0, std=0.01, bias=0 

auxiliary_head.conv_seg.bias - torch.Size([5]): 
NormalInit: mean=0, std=0.01, bias=0 

auxiliary_head.convs.0.conv.weight - torch.Size([256, 1024, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.convs.0.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.convs.0.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  
2023/06/18 14:16:49 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
2023/06/18 14:16:49 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
2023/06/18 14:16:49 - mmengine - INFO - Checkpoints will be saved to /home/lkk/cvnet_exp/mmsegmentation-dev-1.x/work_dirs/watermelon.
2023/06/18 14:16:54 - mmengine - INFO - Exp name: pspnet-watermelon_20230618_141645
2023/06/18 14:16:54 - mmengine - INFO - Iter(train) [   6/3000]  lr: 9.9989e-03  eta: 0:40:44  time: 0.8164  data_time: 0.0037  memory: 11478  loss: 0.1396  decode.loss_ce: 0.0990  decode.acc_seg: 34.9976  aux.loss_ce: 0.0406  aux.acc_seg: 22.3602
2023/06/18 14:17:15 - mmengine - INFO - Iter(train) [ 100/3000]  lr: 9.9779e-03  eta: 0:12:27  time: 0.2228  data_time: 0.0038  memory: 3774  loss: 0.0692  decode.loss_ce: 0.0477  decode.acc_seg: 85.4279  aux.loss_ce: 0.0216  aux.acc_seg: 79.2389
2023/06/18 14:17:37 - mmengine - INFO - Iter(train) [ 200/3000]  lr: 9.9557e-03  eta: 0:11:15  time: 0.2258  data_time: 0.0038  memory: 3774  loss: 0.0650  decode.loss_ce: 0.0453  decode.acc_seg: 73.2819  aux.loss_ce: 0.0198  aux.acc_seg: 70.2606
2023/06/18 14:18:00 - mmengine - INFO - Iter(train) [ 300/3000]  lr: 9.9334e-03  eta: 0:10:38  time: 0.2281  data_time: 0.0035  memory: 3774  loss: 0.0527  decode.loss_ce: 0.0372  decode.acc_seg: 85.2844  aux.loss_ce: 0.0155  aux.acc_seg: 77.2186
2023/06/18 14:18:23 - mmengine - INFO - Iter(train) [ 400/3000]  lr: 9.9111e-03  eta: 0:10:10  time: 0.2303  data_time: 0.0036  memory: 3774  loss: 0.0674  decode.loss_ce: 0.0481  decode.acc_seg: 78.2227  aux.loss_ce: 0.0193  aux.acc_seg: 75.1556
2023/06/18 14:18:35 - mmengine - INFO - per class results:
2023/06/18 14:18:35 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
|    red     | 67.45 | 95.61 |
|   green    | 47.42 | 52.19 |
|   white    |  4.5  |  4.62 |
| seed-black | 15.46 | 15.97 |
| seed-white | 50.26 | 70.15 |
+------------+-------+-------+
2023/06/18 14:18:35 - mmengine - INFO - Iter(val) [11/11]    aAcc: 72.2000  mIoU: 37.0200  mAcc: 47.7100  data_time: 0.0141  time: 1.1419
2023/06/18 14:18:59 - mmengine - INFO - Iter(train) [ 500/3000]  lr: 9.8888e-03  eta: 0:09:45  time: 0.2330  data_time: 0.0037  memory: 10250  loss: 0.0483  decode.loss_ce: 0.0342  decode.acc_seg: 76.3824  aux.loss_ce: 0.0141  aux.acc_seg: 73.0042
2023/06/18 14:19:22 - mmengine - INFO - Iter(train) [ 600/3000]  lr: 9.8665e-03  eta: 0:09:22  time: 0.2383  data_time: 0.0036  memory: 3774  loss: 0.0473  decode.loss_ce: 0.0337  decode.acc_seg: 82.0312  aux.loss_ce: 0.0136  aux.acc_seg: 83.2825
2023/06/18 14:19:46 - mmengine - INFO - Iter(train) [ 700/3000]  lr: 9.8442e-03  eta: 0:09:01  time: 0.2448  data_time: 0.0036  memory: 3774  loss: 0.0449  decode.loss_ce: 0.0321  decode.acc_seg: 91.9861  aux.loss_ce: 0.0128  aux.acc_seg: 90.4327
2023/06/18 14:20:11 - mmengine - INFO - Iter(train) [ 800/3000]  lr: 9.8218e-03  eta: 0:08:40  time: 0.2489  data_time: 0.0037  memory: 3774  loss: 0.0392  decode.loss_ce: 0.0271  decode.acc_seg: 84.1187  aux.loss_ce: 0.0121  aux.acc_seg: 82.1075
2023/06/18 14:20:13 - mmengine - INFO - per class results:
2023/06/18 14:20:13 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
|    red     | 73.74 | 96.01 |
|   green    | 62.16 | 66.72 |
|   white    | 19.13 | 20.76 |
| seed-black | 40.34 | 43.62 |
| seed-white | 47.51 | 52.12 |
+------------+-------+-------+
2023/06/18 14:20:13 - mmengine - INFO - Iter(val) [11/11]    aAcc: 79.2000  mIoU: 48.5800  mAcc: 55.8400  data_time: 0.0038  time: 0.1610
2023/06/18 14:20:38 - mmengine - INFO - Iter(train) [ 900/3000]  lr: 9.7995e-03  eta: 0:08:20  time: 0.2511  data_time: 0.0036  memory: 3774  loss: 0.0402  decode.loss_ce: 0.0282  decode.acc_seg: 85.8795  aux.loss_ce: 0.0120  aux.acc_seg: 87.8143
2023/06/18 14:21:03 - mmengine - INFO - Exp name: pspnet-watermelon_20230618_141645
2023/06/18 14:21:03 - mmengine - INFO - Iter(train) [1000/3000]  lr: 9.7772e-03  eta: 0:07:59  time: 0.2524  data_time: 0.0036  memory: 3774  loss: 0.0431  decode.loss_ce: 0.0304  decode.acc_seg: 77.5055  aux.loss_ce: 0.0127  aux.acc_seg: 77.1179
2023/06/18 14:21:28 - mmengine - INFO - Iter(train) [1100/3000]  lr: 9.7549e-03  eta: 0:07:37  time: 0.2529  data_time: 0.0035  memory: 3774  loss: 0.0366  decode.loss_ce: 0.0252  decode.acc_seg: 93.4082  aux.loss_ce: 0.0114  aux.acc_seg: 93.2007
2023/06/18 14:21:54 - mmengine - INFO - Iter(train) [1200/3000]  lr: 9.7325e-03  eta: 0:07:15  time: 0.2522  data_time: 0.0036  memory: 3774  loss: 0.0443  decode.loss_ce: 0.0310  decode.acc_seg: 86.1481  aux.loss_ce: 0.0134  aux.acc_seg: 82.8125
2023/06/18 14:21:55 - mmengine - INFO - per class results:
2023/06/18 14:21:55 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
|    red     | 70.43 |  97.1 |
|   green    | 52.88 | 55.43 |
|   white    |  0.98 |  0.98 |
| seed-black | 41.39 | 47.36 |
| seed-white | 15.36 | 15.68 |
+------------+-------+-------+
2023/06/18 14:21:55 - mmengine - INFO - Iter(val) [11/11]    aAcc: 75.5300  mIoU: 36.2100  mAcc: 43.3100  data_time: 0.0046  time: 0.1624
2023/06/18 14:22:21 - mmengine - INFO - Iter(train) [1300/3000]  lr: 9.7102e-03  eta: 0:06:52  time: 0.2529  data_time: 0.0037  memory: 3774  loss: 0.0387  decode.loss_ce: 0.0274  decode.acc_seg: 75.6134  aux.loss_ce: 0.0113  aux.acc_seg: 74.8932
2023/06/18 14:22:46 - mmengine - INFO - Iter(train) [1400/3000]  lr: 9.6878e-03  eta: 0:06:29  time: 0.2515  data_time: 0.0038  memory: 3774  loss: 0.0433  decode.loss_ce: 0.0305  decode.acc_seg: 73.1232  aux.loss_ce: 0.0128  aux.acc_seg: 65.7471
2023/06/18 14:23:11 - mmengine - INFO - Iter(train) [1500/3000]  lr: 9.6655e-03  eta: 0:06:05  time: 0.2500  data_time: 0.0036  memory: 3774  loss: 0.0495  decode.loss_ce: 0.0351  decode.acc_seg: 71.3867  aux.loss_ce: 0.0144  aux.acc_seg: 69.1315
2023/06/18 14:23:11 - mmengine - INFO - Saving checkpoint at 1500 iterations
2023/06/18 14:23:37 - mmengine - INFO - Iter(train) [1600/3000]  lr: 9.6431e-03  eta: 0:05:43  time: 0.2491  data_time: 0.0036  memory: 3774  loss: 0.0336  decode.loss_ce: 0.0236  decode.acc_seg: 86.5479  aux.loss_ce: 0.0100  aux.acc_seg: 86.0443
2023/06/18 14:23:39 - mmengine - INFO - per class results:
2023/06/18 14:23:39 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
|    red     | 79.69 | 97.58 |
|   green    | 79.52 | 84.33 |
|   white    |  4.7  |  4.79 |
| seed-black | 47.52 | 51.81 |
| seed-white | 47.54 | 63.46 |
+------------+-------+-------+
2023/06/18 14:23:39 - mmengine - INFO - Iter(val) [11/11]    aAcc: 84.3600  mIoU: 51.7900  mAcc: 60.4000  data_time: 0.0042  time: 0.1627
2023/06/18 14:24:04 - mmengine - INFO - Iter(train) [1700/3000]  lr: 9.6207e-03  eta: 0:05:18  time: 0.2511  data_time: 0.0037  memory: 3774  loss: 0.0490  decode.loss_ce: 0.0344  decode.acc_seg: 74.1913  aux.loss_ce: 0.0146  aux.acc_seg: 72.0154
2023/06/18 14:24:29 - mmengine - INFO - Iter(train) [1800/3000]  lr: 9.5983e-03  eta: 0:04:54  time: 0.2487  data_time: 0.0035  memory: 3774  loss: 0.0342  decode.loss_ce: 0.0244  decode.acc_seg: 87.1704  aux.loss_ce: 0.0098  aux.acc_seg: 85.1410
2023/06/18 14:24:54 - mmengine - INFO - Iter(train) [1900/3000]  lr: 9.5760e-03  eta: 0:04:30  time: 0.2475  data_time: 0.0037  memory: 3774  loss: 0.0351  decode.loss_ce: 0.0248  decode.acc_seg: 87.9120  aux.loss_ce: 0.0104  aux.acc_seg: 85.9100
2023/06/18 14:25:19 - mmengine - INFO - Exp name: pspnet-watermelon_20230618_141645
2023/06/18 14:25:19 - mmengine - INFO - Iter(train) [2000/3000]  lr: 9.5536e-03  eta: 0:04:05  time: 0.2491  data_time: 0.0036  memory: 3774  loss: 0.0359  decode.loss_ce: 0.0252  decode.acc_seg: 76.8799  aux.loss_ce: 0.0107  aux.acc_seg: 77.7924
2023/06/18 14:25:21 - mmengine - INFO - per class results:
2023/06/18 14:25:21 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
|    red     | 78.92 | 97.34 |
|   green    | 74.35 | 78.36 |
|   white    | 10.35 |  10.9 |
| seed-black | 60.16 | 65.04 |
| seed-white | 49.55 | 59.51 |
+------------+-------+-------+
2023/06/18 14:25:21 - mmengine - INFO - Iter(val) [11/11]    aAcc: 83.9200  mIoU: 54.6700  mAcc: 62.2300  data_time: 0.0046  time: 0.1627
2023/06/18 14:25:45 - mmengine - INFO - Iter(train) [2100/3000]  lr: 9.5312e-03  eta: 0:03:41  time: 0.2482  data_time: 0.0036  memory: 3774  loss: 0.0366  decode.loss_ce: 0.0259  decode.acc_seg: 81.3873  aux.loss_ce: 0.0107  aux.acc_seg: 82.1136
2023/06/18 14:26:10 - mmengine - INFO - Iter(train) [2200/3000]  lr: 9.5088e-03  eta: 0:03:16  time: 0.2484  data_time: 0.0036  memory: 3774  loss: 0.0345  decode.loss_ce: 0.0244  decode.acc_seg: 94.3909  aux.loss_ce: 0.0101  aux.acc_seg: 94.6808
2023/06/18 14:26:35 - mmengine - INFO - Iter(train) [2300/3000]  lr: 9.4864e-03  eta: 0:02:52  time: 0.2471  data_time: 0.0037  memory: 3774  loss: 0.0410  decode.loss_ce: 0.0291  decode.acc_seg: 89.8926  aux.loss_ce: 0.0118  aux.acc_seg: 91.6748
2023/06/18 14:27:00 - mmengine - INFO - Iter(train) [2400/3000]  lr: 9.4640e-03  eta: 0:02:27  time: 0.2469  data_time: 0.0036  memory: 3774  loss: 0.0297  decode.loss_ce: 0.0209  decode.acc_seg: 82.8644  aux.loss_ce: 0.0087  aux.acc_seg: 91.6077
2023/06/18 14:27:02 - mmengine - INFO - per class results:
2023/06/18 14:27:02 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
|    red     | 81.32 | 95.92 |
|   green    | 83.23 | 91.84 |
|   white    | 10.37 | 10.71 |
| seed-black | 58.21 | 60.65 |
| seed-white |  38.9 | 41.81 |
+------------+-------+-------+
2023/06/18 14:27:02 - mmengine - INFO - Iter(val) [11/11]    aAcc: 86.2700  mIoU: 54.4100  mAcc: 60.1900  data_time: 0.0046  time: 0.1614
2023/06/18 14:27:27 - mmengine - INFO - Iter(train) [2500/3000]  lr: 9.4416e-03  eta: 0:02:03  time: 0.2482  data_time: 0.0040  memory: 3774  loss: 0.0420  decode.loss_ce: 0.0294  decode.acc_seg: 79.4647  aux.loss_ce: 0.0126  aux.acc_seg: 78.7628
2023/06/18 14:27:51 - mmengine - INFO - Iter(train) [2600/3000]  lr: 9.4191e-03  eta: 0:01:38  time: 0.2489  data_time: 0.0040  memory: 3774  loss: 0.0397  decode.loss_ce: 0.0278  decode.acc_seg: 88.8855  aux.loss_ce: 0.0119  aux.acc_seg: 88.8672
2023/06/18 14:28:16 - mmengine - INFO - Iter(train) [2700/3000]  lr: 9.3967e-03  eta: 0:01:13  time: 0.2461  data_time: 0.0036  memory: 3774  loss: 0.0352  decode.loss_ce: 0.0249  decode.acc_seg: 85.7269  aux.loss_ce: 0.0102  aux.acc_seg: 83.5449
2023/06/18 14:28:41 - mmengine - INFO - Iter(train) [2800/3000]  lr: 9.3743e-03  eta: 0:00:49  time: 0.2460  data_time: 0.0036  memory: 3774  loss: 0.0352  decode.loss_ce: 0.0244  decode.acc_seg: 82.5134  aux.loss_ce: 0.0108  aux.acc_seg: 75.5157
2023/06/18 14:28:43 - mmengine - INFO - per class results:
2023/06/18 14:28:43 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
|    red     | 79.81 | 98.98 |
|   green    | 67.29 | 69.01 |
|   white    | 39.21 |  39.9 |
| seed-black | 69.21 | 73.33 |
| seed-white | 22.85 | 24.16 |
+------------+-------+-------+
2023/06/18 14:28:43 - mmengine - INFO - Iter(val) [11/11]    aAcc: 84.7500  mIoU: 55.6700  mAcc: 61.0800  data_time: 0.0046  time: 0.1611
2023/06/18 14:29:08 - mmengine - INFO - Iter(train) [2900/3000]  lr: 9.3518e-03  eta: 0:00:24  time: 0.2471  data_time: 0.0037  memory: 3774  loss: 0.0381  decode.loss_ce: 0.0271  decode.acc_seg: 79.0985  aux.loss_ce: 0.0110  aux.acc_seg: 80.5267
2023/06/18 14:29:32 - mmengine - INFO - Exp name: pspnet-watermelon_20230618_141645
2023/06/18 14:29:32 - mmengine - INFO - Iter(train) [3000/3000]  lr: 9.3294e-03  eta: 0:00:00  time: 0.2470  data_time: 0.0036  memory: 3774  loss: 0.0343  decode.loss_ce: 0.0244  decode.acc_seg: 91.9464  aux.loss_ce: 0.0099  aux.acc_seg: 93.1732
2023/06/18 14:29:32 - mmengine - INFO - Saving checkpoint at 3000 iterations
